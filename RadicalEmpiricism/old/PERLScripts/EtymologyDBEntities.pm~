#################################
#
#   METHOD: 
#   PRECONDITIONS:
#   POSTCONDITIONS: 
#   SUMMARY: 
#
#   VARIABLES:
# 
##################################


package Word;

sub new {
    my $self = {
	_frenchTerm => undef,
    };
    bless $self 'Word';
    return $self;
}

1;


########################################
#
#
# package Etymology
#
#
########################################
package Etymology;

sub new {
    my $class = shift;
    my $self = {
	_frenchWord => shift,
	_englishCognate => shift,
	_etymology => shift,
	_baseRoot => shift,
	_moreAt => undef,
	_radicals => [],
    };
    bless $self, $class;
    return $self;
}


#
#
# package MoreAt
#
#
########################################
package MoreAt;

sub new {
    my $class = shift;
    my $moreLine = shift;
    my $hrefIndex = index $moreLine, "href";
    $hrefIndex +=6;

    $moreLine = substr ($moreLine, 0, $hrefIndex) .  "http://www.m-w.com" . substr ($moreLine,  $hrefIndex) ;

    $moreLine =~ /href="(.*?)"/;
    my $href = $1;

    my $self;
    my $self = {
	_moreLine => $moreLine,
	_href => $href,
    };
    bless $self, $class;
    return $self;
}

1;



 ########################################
 #
 #
 # package Radical
 #
 #
 ########################################

package Radical;

sub new {
    my $class = shift;
    my $self = {
	_sourceLanguage => shift,
	_meaning => shift,
    };
    bless $self, $class;
    return $self;
}



sub getLanguage {
    my $self = shift;

    return $self->{_sourceLanguage};
}

sub getMeaning {
    my $self = shift;

    return $self->{_meaning};
}


sub print {
    my $self = shift;
    my $lang = $self-> {_sourceLanguage};
    my $mean = $self->{_meaning};
    print " RADICAL has LANGUAGE $lang and MEANING $mean\n"; 
}
 1;



#######################################
#
#
# package moreAt
#
#
########################################

package moreAt;

sub new {
    my $self = {
	_moreWord => undef,
	_definition => undef,
    };
    bless $self, 'MoreAt';
    return $self;
}

1;

########################################
#
#
# package Term
#
#
########################################

package Term;


sub new {
    my $self = {
	_frenchTerm => undef,
	_englishTerm => undef,
	_englishDef => undef,
	_frenchDef => undef,
	_englishEty => undef,
	_frenchDef => undef,
    };
    bless $self, 'Term';
    return $self;
}

sub print {
    my $self = shift;
#    my $OUT = shift;


    my $english = $self->{_englishTerm};
#    if (($english eq "NO_COGNATE") ||
#	($english eq "NO_TRANSLATION"))
#    {
#	return;
#    }
    my $french =  $self->{_frenchTerm};
    my $engEtym = $self->{_englishEty};
    print  "$french\t$english\t$engEtym\n";
#    $OUT->write( "$french\t$english\t$engEtym\n");
#    $OUT->flush();

}

sub setEnglishEtymology {
    my $self = shift;
    $self->{_englishEty} = shift;
}

sub setFrenchTerm {
    my $self = shift;
    $self->{_frenchTerm} = shift;
}

sub setEnglishTerm {
    my $self = shift;
    $self->{_englishTerm} = shift;
}

1;


1;
